name: Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      # Adding Custom Compsite Action
      - name: Load & Cache Dependencies
        id: cache-deps
      # If you created a standalone repository for your custom action, you would need a repository identifier
      # Example.. AJenkinsSolutions/custom-action-repo 
      # Or local path. relative to root folder
        uses: ./.github/actions/cached-deps
        # If we want to use our custom actions input
        # we set that 'caching' input to false to disable caching in this step
        with: 
          caching: 'false'
      - name: output information
        run: echo "Cache used? ${{steps.cache-deps.outputs.used-cache}} "    
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      # Custom composite Action
      - name: Load & Cache Dependencies
        uses: ./.github/actions/cached-deps

      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

     # Custom Action
      - name: Load & Cache Dependencies
        uses: ./.github/actions/cached-deps

      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        run: echo "Deploying..."